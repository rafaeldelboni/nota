name: Deploy

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  tests:
    strategy:
      matrix:
        os-version: [ubuntu-latest]
        node-version: [16.x]
    runs-on: ${{ matrix.os-version }}

    steps:
    - name: Clone Repo
      uses: actions/checkout@v3.0.2

    - name: Prepare java
      uses: actions/setup-java@v3.3.0
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Install clojure cli
      uses: DeLaGuardo/setup-clojure@master
      with:
        cli: 1.11.1.1113

    - name: Test ${{ matrix.node-version }}
      uses: actions/setup-node@v3.2.0
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        npm install
        npm run ci-tests

  tests-bb:
    strategy:
      matrix:
        os-version: [ubuntu-latest]
        node-version: [16.x]
    runs-on: ${{ matrix.os-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup Babashka
        uses: turtlequeue/setup-babashka@v1.5.0
        with:
          babashka-version: 1.0.164

      - name: Tests BB Scripts
        run: bb tests

  deploy:
    needs: [tests, tests-bb]
    strategy:
      matrix:
        os-version: [ubuntu-latest]
        node-version: [16.x]
    runs-on: ubuntu-latest

    steps:
    - name: Clone Repo
      uses: actions/checkout@v3.0.2

    - name: Prepare java
      uses: actions/setup-java@v3.3.0
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Install clojure cli
      uses: DeLaGuardo/setup-clojure@master
      with:
        cli: 1.11.1.1113

    - name: Build ${{ matrix.node-version }}
      uses: actions/setup-node@v3.2.0
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        npm install
        npm run release

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./resources/public
